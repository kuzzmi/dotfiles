# React Redux And All That Crap
snippet cs
	createSelector(
		${1:selector},
		${2:result} => $2${0}
	);

# class function
snippet cf
	${1:fn}(${2}) {
		${0}
	}

snippet acf
	${1:fnName} = ${2:()} => ${0};

# class function
snippet rcf
	${1:fn}(${2}) {
		const { ${3} } = this.props;
		${0}
	}

snippet p
	${1:prop}={ $1 }

# React Lifecycle Hooks
snippet cwm
	componentWillMount() {
		${0}
	}
snippet cdm
	componentDidMount() {
		${0}
	}
snippet cwrp
	componentWillReceiveProps(${1:nextProps}) {
		${0}
	}
snippet scu
	shouldComponentUpdate(${1:nextProps}${2:, nextState}) {
		${0}
		return true;
	}
snippet cdu
	componentDidUpdate(${1:prevProps}${2:, prevState}) {
		${0}
	}
snippet cwu
	componentWillUnmount() {
		${0}
	}

snippet ss
	this.setState(state => ({
		...state,
		${0}
	}));

snippet pt
	PropTypes.${1:any}${2:.isRequired}

snippet cn
	className=${1:{ classes.${2} }}

snippet cnx
	className={ cx(${1}) }

# ES6 constructor
snippet cons
	constructor(${1:props}) {
		super($1);
		${0}
	}

# Testing
snippet desc
	describe('${1}', () => {
		it('should ${2}', () => {
			${0}
		});
	});
snippet it
	it('should ${1}', () => {
		${0}
	});

# Node cool stuff
snippet pnt
	process.nextTick(() => {
		${0}
	});

snippet fe
	forEach(${1:item} => {
		${0}
	});

# Just useful stuff
snippet ec
	export const ${0}
snippet bind
	this.${1:fn} = this.$1.bind(this);
snippet rcl
	class ${1} extends Component {
		render() {
			return (
				${0}
			);
		}
	}
snippet =req
	const ${1:package} = require('${0}');
snippet req
	require('${1}');
snippet me
	module.exports
snippet ins
	console.log(require('util').inspect(${1}, { showHidden: false, depth: null }));
	${0}
snippet rc
	{/* ${0} */}
# setInterval function
snippet si
	setInterval(function() {
		${0}
	}, ${1:10});
# setTimeout function
snippet st
	setTimeout(function() {
		${0}
	}, ${1:10});
snippet /*
	/*
	 * ${0}
	 */
